{"version":3,"sources":["redux/auth/auth-operation.js","shared/FormikInput.js","components/authForm/AuthForm.module.css","components/authForm/AuthForm.js","pages/authPage/AuthPage.js","components/container/Container.js","components/container/Container.module.css","shared/reactAlert.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","logIn","loginObject","dispatch","a","loginRequest","post","data","loginSuccess","result","alertSuccess","alertError","loginError","message","logOut","getState","logoutRequest","authToken","auth","get","logoutSuccess","logoutError","FormikInput","label","props","id","useMemo","Math","floor","random","toString","useField","field","meta","className","htmlFor","error","touched","FormikTextarea","module","exports","initialForm","email","password","validationSchema","Yup","shape","required","min","AuthForm","useDispatch","handleSubmit","values","state","css","wrapper","initialValues","onSubmit","login_form","header","content","name","type","input","footer","button","AuthPage","Container","children","container","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success"],"mappings":"0NAiBAA,IAAMC,SAASC,QAAU,kCAEzB,IAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAmB5CC,EAAQ,SAACC,GAAD,8CAAiB,WAAOC,GAAP,iBAAAC,EAAA,6DAC7BD,EAASE,eADoB,kBAIJX,IAAMY,KAAK,sBAAuBJ,GAJ9B,gBAInBK,EAJmB,EAInBA,KACRJ,EAASK,YAAaD,EAAKE,SAC3BC,YAAa,gGANc,kDAQ3BC,YAAW,2IACXR,EAASS,YAAW,KAAMC,UATC,0DAAjB,uDAaRC,EAAS,yDAAM,WAAOX,EAAUY,GAAjB,iBAAAX,EAAA,6DACnBD,EAASa,eADU,SAIXC,EAAYF,IAAWG,KAAKrB,MAClCA,EAAUoB,GALO,SAOMvB,IAAMyB,IAAI,uBAPhB,kBAOTZ,KACRV,IAEAM,EAASiB,eAVQ,kDAYjBjB,EAASkB,YAAY,KAAMR,UAZV,0DAAN,0D,gLCpDFS,EAAc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,iBAC5CC,EAAKC,mBAAQ,kBAAMC,KAAKC,MAAsB,MAAhBD,KAAKE,UAAkBC,aAAY,IACvE,EAAsBC,YAASP,GAA/B,mBAAOQ,EAAP,KAAcC,EAAd,KACA,OACE,8BACE,wBAAOC,UAAU,QAAQC,QAASV,EAAlC,UACGF,EACD,+CACEE,GAAIA,EACJS,UAAWD,EAAKG,OAASH,EAAKI,QAAU,cAAgB,SACpDL,GACAR,IAEN,qBAAKU,UAAU,oBAAf,SACGD,EAAKG,OAASH,EAAKI,SAClB,mBAAGH,UAAU,qBAAb,SAAmCD,EAAKG,UAErC,UAKFE,EAAiB,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,MAAUC,EAAY,iBAC/CC,EAAKC,mBAAQ,kBAAMC,KAAKC,MAAsB,MAAhBD,KAAKE,UAAkBC,aAAY,IACvE,EAAsBC,YAASP,GAA/B,mBAAOQ,EAAP,KAAcC,EAAd,KACA,OACE,8BACE,wBAAOC,UAAU,QAAQC,QAASV,EAAlC,UACGF,EACD,kDACEE,GAAIA,EACJS,UACED,EAAKG,OAASH,EAAKI,QAAU,0BAA4B,YAEvDL,GACAR,IAEN,qBAAKU,UAAU,oBAAf,SACGD,EAAKG,OAASH,EAAKI,SAClB,mBAAGH,UAAU,qBAAb,SAAmCD,EAAKG,UAErC,W,oBC5CfG,EAAOC,QAAU,CAAC,QAAU,0BAA0B,WAAa,6BAA6B,OAAS,yBAAyB,QAAU,0BAA0B,MAAQ,wBAAwB,SAAW,2BAA2B,YAAY,4BAA4B,YAAY,4BAA4B,OAAS,yBAAyB,SAAW,2BAA2B,OAAS,2B,iHCOvYC,EAAc,CAAEC,MAAO,GAAIC,SAAU,IAErCC,EAAmBC,MAAaC,MAAM,CAC1CJ,MAAOG,MACJH,MAAM,6JACNK,SAAS,sGACZJ,SAAUE,MACPE,SAAS,sGACTC,IAAI,EAAG,oGAmDGC,EAhDE,WACf,IAAM9C,EAAW+C,cAGXC,EAAe,SAACC,GAFN,IAACC,IAGPD,EAHiBjD,EAASF,YAAMoD,KAM1C,OACE,qBAAKnB,UAAWoB,IAAIC,QAApB,SACE,cAAC,IAAD,CACEC,cAAef,EACfG,iBAAkBA,EAClBa,SAAU,SAACL,GAAD,OAAYD,EAAaC,IAHrC,SAKE,eAAC,IAAD,CAAMlB,UAAWoB,IAAII,WAArB,UACE,sBAAKxB,UAAWoB,IAAIK,OAApB,UACE,oGACA,oYAEW,UAGb,sBAAKzB,UAAWoB,IAAIM,QAApB,UACE,cAACtC,EAAA,EAAD,CACEC,MAAM,QACNsC,KAAK,QACLC,KAAK,QACL5B,UAAWoB,IAAIS,QAEjB,cAACzC,EAAA,EAAD,CACEC,MAAM,WACNuC,KAAK,WACLD,KAAK,WACL3B,UAAWoB,IAAIS,WAGnB,qBAAK7B,UAAWoB,IAAIU,OAApB,SACE,wBAAQF,KAAK,SAAS5B,UAAWoB,IAAIW,OAArC,sD,QC5CGC,UAVE,WACf,OACE,qBAAKhC,UAAU,KAAf,SACA,cAACiC,EAAA,EAAD,UACE,cAAC,EAAD,U,gCCPN,iCASeA,IALG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKlC,UAAWoB,IAAIe,UAApB,SAAgCD,M,mBCJzC7B,EAAOC,QAAU,CAAC,UAAY,+B,gCCD9B,sFAGA,SAAS7B,EAAWE,GAClB,OAAOyD,IAAMlC,MAAMvB,EAAS,CAC1B0D,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGd,SAASpE,EAAaG,GACpB,OAAOyD,IAAMS,QAAQlE,EAAS,CAC5B0D,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC","file":"static/js/AuthPage.fe6f57c5.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth-actions\";\r\nimport {alertError, alertSuccess} from \"../../shared/reactAlert\"\r\n\r\naxios.defaults.baseURL = \"https://teatralna.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (registrationObject) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"/api/v1/auth/signup\",\r\n      registrationObject\r\n    );\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (loginObject) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/auth/signin\", loginObject);\r\n    dispatch(loginSuccess(data.result));\r\n    alertSuccess(\"Добро пожаловать.\")\r\n  } catch (error) {\r\n    alertError(\"Неверный логин или пароль\")\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch, getState) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    const authToken = getState().auth.token;\r\n    token.set(authToken);\r\n\r\n    const { data } = await axios.get(\"/api/v1/auth/logout\");\r\n    token.unset();\r\n\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/api/v1/auth/current\");\r\n    dispatch(getCurrentUserSuccess(data.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { token, register, logIn, logOut, getCurrentUser };\r\n","import { useMemo } from \"react\";\r\n///////////////////////////////Formik, YUP /////////////////////////////////////////////////\r\nimport { ErrorMessage, useField } from \"formik\";\r\n\r\nexport const FormikInput = ({ label, ...props }) => {\r\n  const id = useMemo(() => Math.floor(Math.random() * 99999).toString(), []);\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div>\r\n      <label className=\"label\" htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          className={meta.error && meta.touched ? \"input-error\" : \"input\"}\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <div className=\"box_error_message\">\r\n          {meta.error && meta.touched && (\r\n            <p className=\"error_message_text\">{meta.error}</p>\r\n          )}\r\n        </div>{\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport const FormikTextarea = ({ label, ...props }) => {\r\n  const id = useMemo(() => Math.floor(Math.random() * 99999).toString(), []);\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div>\r\n      <label className=\"label\" htmlFor={id}>\r\n        {label}\r\n        <textarea\r\n          id={id}\r\n          className={\r\n            meta.error && meta.touched ? \"textarea textarea-error\" : \"textarea\"\r\n          }\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <div className=\"box_error_message\">\r\n          {meta.error && meta.touched && (\r\n            <p className=\"error_message_text\">{meta.error}</p>\r\n          )}\r\n        </div>{\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AuthForm_wrapper__3mpO_\",\"login_form\":\"AuthForm_login_form__ovI3J\",\"header\":\"AuthForm_header__3cWUD\",\"content\":\"AuthForm_content__1hz5m\",\"input\":\"AuthForm_input__U0wYZ\",\"password\":\"AuthForm_password__2JT2I\",\"user-icon\":\"AuthForm_user-icon__3hXRT\",\"pass-icon\":\"AuthForm_pass-icon__1j852\",\"button\":\"AuthForm_button__1eT5_\",\"register\":\"AuthForm_register__3JL2E\",\"footer\":\"AuthForm_footer__1-jdz\"};","import { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../../redux/auth/auth-operation\";\r\nimport { FormikInput } from \"../../shared/FormikInput\";\r\n///////////////////////////////Formik, YUP /////////////////////////////////////////////////\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport css from \"./AuthForm.module.css\";\r\n\r\nconst initialForm = { email: \"\", password: \"\" };\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Поле должно содержать  cимвол '@'\")\r\n    .required(\"Поле обязательное!\"),\r\n  password: Yup.string()\r\n    .required(\"Поле обязательное!\")\r\n    .min(6, \"Минимум 6 символов.\")\r\n});\r\n\r\nconst AuthForm = () => {\r\n  const dispatch = useDispatch();\r\n  const onLogin = (state) => dispatch(logIn(state));\r\n\r\n  const handleSubmit = (values) => {\r\n    onLogin(values);\r\n  };\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Formik\r\n        initialValues={initialForm}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleSubmit(values)}\r\n      >\r\n        <Form className={css.login_form}>\r\n          <div className={css.header}>\r\n            <h1>Авторизация</h1>\r\n            <span>\r\n              Введите ваши регистрационные данные для входа в ваш личный\r\n              кабинет.{\" \"}\r\n            </span>\r\n          </div>\r\n          <div className={css.content}>\r\n            <FormikInput\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className={css.input}\r\n            />\r\n            <FormikInput\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className={css.input}\r\n            />\r\n          </div>\r\n          <div className={css.footer}>\r\n            <button type=\"submit\" className={css.button}>\r\n              Войти\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"../../components/authForm/AuthForm\";\r\nimport Container from \"../../components/container/Container\";\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <div className=\"bg\">\r\n    <Container>\r\n      <AuthForm />\r\n    </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={css.container}>{children}</div>;\r\n};\r\n\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__wdzM0\"};","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction alertError(message) {\r\n  return toast.error(message, {\r\n    position: \"top-right\",\r\n    autoClose: 4000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n}\r\nfunction alertSuccess(message) {\r\n  return toast.success(message, {\r\n    position: \"top-right\",\r\n    autoClose: 4000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n}\r\n\r\nexport { alertError, alertSuccess };\r\n"],"sourceRoot":""}