{"version":3,"sources":["shared/FormikInput.js","components/orderForm/OrderForm.module.css","img/icons/bx-upload.svg","components/orderForm/OrderForm.js","components/container/Container.js","components/container/Container.module.css","redux/orders/orders-operations.js"],"names":["FormikInput","label","props","id","useMemo","Math","floor","random","toString","useField","field","meta","className","htmlFor","error","touched","FormikTextarea","module","exports","initialForm","name","phone","weight","price","prepayment","filling","description","dateToReady","time","validationSchema","Yup","shape","required","matches","max","OrderForm","dispatch","useDispatch","history","useHistory","useState","urlImg","setUrlImg","handleSubmit","values","a","addOrder","data","push","_id","Container","css","wrapper","initialValues","onSubmit","resetForm","date","newDate","moment","format","updateDateAndImg","img","enableReinitialize","login_form","content","input_wrapper","type","accept","onChange","event","file","target","files","FormData","append","axios","post","then","alertSuccess","catch","alertError","input_file","input_file_button","input_file_icon_wrapper","src","svg","alt","input_file_icon","input_file_button_text","input","autoComplete","placeholder","flexBox","rows","cols","footer","button","children","container","defaults","baseURL","token","headers","common","Authorization","formObj","getState","addOrderRequested","authToken","auth","addOrderSuccess","addOrderFailure","message","getAllOrdersForDay","day","getAllForAMonthRequest","get","getAllForADaySuccess","getAllForADayError","getAllOrdersOfMonth","month","getAllForADayRequest","getAllForAMonthSuccess","getAllForAMonthError","deleteOrder","deleteOrderRequest","delete","deleteOrderSuccess","deleteOrderError"],"mappings":"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","file":"static/js/OrderForm.427153c4.chunk.js","sourcesContent":["import { useMemo } from \"react\";\r\n///////////////////////////////Formik, YUP /////////////////////////////////////////////////\r\nimport { ErrorMessage, useField } from \"formik\";\r\n\r\nexport const FormikInput = ({ label, ...props }) => {\r\n  const id = useMemo(() => Math.floor(Math.random() * 99999).toString(), []);\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div>\r\n      <label className=\"label\" htmlFor={id}>\r\n        {label}\r\n        <input\r\n          id={id}\r\n          className={meta.error && meta.touched ? \"input-error\" : \"input\"}\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <div className=\"box_error_message\">\r\n          {meta.error && meta.touched && (\r\n            <p className=\"error_message_text\">{meta.error}</p>\r\n          )}\r\n        </div>{\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport const FormikTextarea = ({ label, ...props }) => {\r\n  const id = useMemo(() => Math.floor(Math.random() * 99999).toString(), []);\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div>\r\n      <label className=\"label\" htmlFor={id}>\r\n        {label}\r\n        <textarea\r\n          id={id}\r\n          className={\r\n            meta.error && meta.touched ? \"textarea textarea-error\" : \"textarea\"\r\n          }\r\n          {...field}\r\n          {...props}\r\n        />\r\n        <div className=\"box_error_message\">\r\n          {meta.error && meta.touched && (\r\n            <p className=\"error_message_text\">{meta.error}</p>\r\n          )}\r\n        </div>{\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrderForm_wrapper__1wXkQ\",\"login_form\":\"OrderForm_login_form__2W_yx\",\"header\":\"OrderForm_header__39vBq\",\"content\":\"OrderForm_content__2_bnH\",\"input\":\"OrderForm_input__vz53s\",\"password\":\"OrderForm_password__HfrR9\",\"user-icon\":\"OrderForm_user-icon__1fCjl\",\"pass-icon\":\"OrderForm_pass-icon__5p6q3\",\"button\":\"OrderForm_button__-aTPM\",\"register\":\"OrderForm_register__3ZWrK\",\"footer\":\"OrderForm_footer__3b1ZY\",\"input_wrapper\":\"OrderForm_input_wrapper__3jKjf\",\"input_file\":\"OrderForm_input_file__3nPC0\",\"input_file_icon_wrapper\":\"OrderForm_input_file_icon_wrapper__3ZIRk\",\"input_file_icon\":\"OrderForm_input_file_icon__2w10G\",\"input_file_button_text\":\"OrderForm_input_file_button_text__hwuuP\",\"input_file_button\":\"OrderForm_input_file_button__3eX8o\",\"flexBox\":\"OrderForm_flexBox__N-uXa\"};","export default __webpack_public_path__ + \"static/media/bx-upload.8e46928e.svg\";","import { FormikInput, FormikTextarea } from \"../../shared/FormikInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addOrder } from \"../../redux/orders/orders-operations\";\r\n///////////////////////////////Formik, YUP /////////////////////////////////////////////////\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport moment from \"moment\";\r\nimport Container from \"../container/Container\";\r\nimport svg from \"../../img/icons/bx-upload.svg\";\r\nimport css from \"./OrderForm.module.css\";\r\nimport { alertError, alertSuccess } from \"../../shared/reactAlert\";\r\n\r\nconst initialForm = {\r\n  name: \"\",\r\n  phone: \"+380\",\r\n  weight: \"\",\r\n  price: \"\",\r\n  prepayment: \"\",\r\n  filling: \"\",\r\n  description: \"\",\r\n  dateToReady: \"\",\r\n  time: \"\",\r\n};\r\n\r\nconst phoneRegExp = /^(?:\\+38)?(0\\d{9})$/;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Поле обязательное!\"),\r\n  phone: Yup.string()\r\n    .matches(phoneRegExp, \"Введите номер телефона.\")\r\n    .max(13)\r\n    .required(\"Поле обязательное!\"),\r\n  weight: Yup.number().required(\"Поле обязательное!\"),\r\n  price: Yup.number().required(\"Поле обязательное!\"),\r\n  prepayment: Yup.number().required(\"Поле обязательное!\"),\r\n  dateToReady: Yup.string().required(\"Поле обязательное!\"),\r\n  time: Yup.string().required(\"Поле обязательное!\"),\r\n});\r\n\r\nconst OrderForm = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [urlImg, setUrlImg] = useState(false);\r\n\r\n  const handleSubmit = async (values) => {\r\n    const { data } = await dispatch(addOrder(values));\r\n    history.push(`/client/${data._id}`);\r\n  };\r\n\r\n  const handlePostImg = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    axios\r\n      .post(\"https://teatralna.herokuapp.com/api/v1/orders/uploadFiles\", data)\r\n      .then((data) => {\r\n        setUrlImg(data?.data?.img);\r\n        alertSuccess(\"Изображение загружено.\");\r\n      })\r\n      .catch((error) => alertError(\"Изображение не загружено!!!\"));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={css.wrapper}>\r\n        <Formik\r\n          initialValues={initialForm}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            const date = values.date;\r\n            const newDate = moment(date).format(\"DD.MM.YYYY\");\r\n            const updateDateAndImg = {\r\n              ...values,\r\n              img: urlImg,\r\n              dateToReady: newDate,\r\n            };\r\n\r\n            handleSubmit(updateDateAndImg);\r\n            resetForm();\r\n          }}\r\n          enableReinitialize={true}\r\n        >\r\n          <Form className={css.login_form}>\r\n            <div className={css.content}>\r\n              <div className={css.input_wrapper}>\r\n                {\" \"}\r\n                <input\r\n                  name=\"image\"\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png\"\r\n                  onChange={handlePostImg}\r\n                  id=\"input_file\"\r\n                  className={css.input_file}\r\n                />\r\n                <label htmlFor=\"input_file\" className={css.input_file_button}>\r\n                  <span className={css.input_file_icon_wrapper}>\r\n                    <img src={svg} alt=\"\" className={css.input_file_icon} />\r\n                  </span>\r\n                  <span className={css.input_file_button_text}>\r\n                    Выберите файл\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <FormikInput\r\n                className={css.input}\r\n                label=\"Имя\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n              />\r\n              <FormikInput\r\n                label=\"Номер телефона\"\r\n                name=\"phone\"\r\n                type=\"tel\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"+380990000000\"\r\n                className={css.input}\r\n              />\r\n\r\n              <FormikInput\r\n                label=\"Дата:\"\r\n                name=\"dateToReady\"\r\n                type=\"date\"\r\n                format=\"DD.MM.YYYY\"\r\n                className={css.input}\r\n              />\r\n              <FormikInput\r\n                className={css.input}\r\n                label=\"Время\"\r\n                name=\"time\"\r\n                type=\"time\"\r\n              />\r\n              <div className={css.flexBox}>\r\n                <FormikInput\r\n                  label=\"Вес изделия\"\r\n                  name=\"weight\"\r\n                  type=\"number\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"кг\"\r\n                  className={css.input}\r\n                />\r\n                <FormikInput\r\n                  label=\"Цена\"\r\n                  name=\"price\"\r\n                  type=\"number\"\r\n                  autoComplete=\"off\"\r\n                  placeholder=\"грн\"\r\n                  className={css.input}\r\n                />\r\n              </div>\r\n              <FormikInput\r\n                label=\"Предоплата\"\r\n                name=\"prepayment\"\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"грн\"\r\n                className={css.input}\r\n              />\r\n              <FormikTextarea\r\n                label=\"Начинка\"\r\n                name=\"filling\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Начинка\"\r\n                className={css.input}\r\n                rows=\"6\"\r\n                cols=\"35\"\r\n              />\r\n              <FormikTextarea\r\n                label=\"Описание\"\r\n                name=\"description\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Описание\"\r\n                className={css.input}\r\n                rows=\"6\"\r\n                cols=\"35\"\r\n                // style={\"resize: none;\"}\r\n              />\r\n\r\n              <div className={css.footer}>\r\n                <button type=\"submit\" className={css.button}>\r\n                  Создать\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import React from \"react\";\r\n\r\nimport css from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={css.container}>{children}</div>;\r\n};\r\n\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__wdzM0\"};","import axios from \"axios\";\r\nimport {\r\n  addOrderRequested,\r\n  addOrderSuccess,\r\n  addOrderFailure,\r\n  getAllForADayRequest,\r\n  getAllForADaySuccess,\r\n  getAllForADayError,\r\n  getAllForAMonthError,\r\n  getAllForAMonthSuccess,\r\n  getAllForAMonthRequest,\r\n  deleteOrderRequest,\r\n  deleteOrderSuccess,\r\n  deleteOrderError,\r\n} from \"./orders-actions\";\r\nimport { alertError, alertSuccess } from \"../../shared/reactAlert\";\r\n\r\naxios.defaults.baseURL = \"https://teatralna.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst addOrder = (formObj) => async (dispatch, getState) => {\r\n  dispatch(addOrderRequested());\r\n  try {\r\n    const authToken = getState().auth.token;\r\n    token.set(authToken);\r\n    const { data } = await axios.post(\"/api/v1/orders\", formObj);\r\n    dispatch(addOrderSuccess(data));\r\n    alertSuccess(\"Заказ создан\")\r\n    return data;\r\n  } catch (error) {\r\n    dispatch(addOrderFailure(error.message));\r\n    alertError(error.message);\r\n  }\r\n};\r\n\r\nconst getAllOrdersForDay = (day) => async (dispatch, getState) => {\r\n  dispatch(getAllForAMonthRequest());\r\n  try {\r\n    const authToken = getState().auth.token;\r\n    token.set(authToken);\r\n    const { data } = await axios.get(`/api/v1/orders/day/${day}`);\r\n    dispatch(getAllForADaySuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllForADayError());\r\n    alertError(error.message);\r\n  }\r\n};\r\nconst getAllOrdersOfMonth = (month) => async (dispatch, getState) => {\r\n  dispatch(getAllForADayRequest());\r\n  try {\r\n    const authToken = getState().auth.token;\r\n    token.set(authToken);\r\n    const { data } = await axios.get(`/api/v1/orders/${month}`);\r\n    dispatch(getAllForAMonthSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getAllForAMonthError());\r\n    alertError(error.message);\r\n  }\r\n};\r\n\r\nconst deleteOrder = (id) => async (dispatch, getState) => {\r\n  dispatch(deleteOrderRequest());\r\n\r\n  try {\r\n    const authToken = getState().auth.token;\r\n    token.set(authToken);\r\n    const { data } = await axios.delete(`/api/v1/orders/${id}`);\r\n    dispatch(deleteOrderSuccess(data));\r\n  } catch (error) {\r\n    dispatch(deleteOrderError());\r\n    alertError(error.message);\r\n  }\r\n};\r\n\r\nexport { addOrder, getAllOrdersForDay, getAllOrdersOfMonth, deleteOrder };\r\n"],"sourceRoot":""}