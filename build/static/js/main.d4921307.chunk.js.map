{"version":3,"sources":["redux/auth/auth-actions.js","redux/orders/orders-actions.js","redux/auth/auth-selectors.js","components/appLoader/AppLoader.module.css","components/appLoader/AppLoader.js","redux/date/date.actions.js","routes/publicRoute.js","routes/privateRoute.js","App.js","redux/auth/auth-reducers.js","redux/orders/orders-reducers.js","redux/date/dateReducer.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","addOrderRequested","addOrderSuccess","addOrderFailure","getAllForADayRequest","getAllForADaySuccess","getAllForADayError","getAllForAMonthRequest","getAllForAMonthSuccess","getAllForAMonthError","deleteOrderRequest","deleteOrderSuccess","deleteOrderError","getIsAuth","state","auth","token","module","exports","AppLoader","className","styles","loader","style","type","color","secondaryColor","height","width","radius","setSelectedDate","connect","isAuthenticated","Component","component","redirectTo","restricted","routeProps","isAuth","useSelector","render","props","to","PrivateRoute","AuthPage","lazy","MainPage","ClientPage","NotFoundPage","App","fallback","exact","path","transition","Zoom","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialUserState","name","email","user","createReducer","_","payload","error","authReducer","combineReducers","ordersOfCurrentDay","data","filter","_id","ordersOfMonth","allorders","ordersReducer","currDate","moment","format","selectedDateReducer","getSelectedDate","authPersistConfig","key","storage","whitelist","rootReducer","persistReducer","order","selectedDate","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d4921307.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addOrderRequested = createAction(\"orders/addOrderRequested\");\r\nconst addOrderSuccess = createAction(\"orders/addOrderSuccess\");\r\nconst addOrderFailure = createAction(\"orders/addOrderFailure\");\r\n\r\nconst getAllForADayRequest = createAction(\"orders/getAllForADayRequest\");\r\nconst getAllForADaySuccess = createAction(\"orders/getAllForADaySuccess\");\r\nconst getAllForADayError = createAction(\"orders/getAllForADayError\");\r\n\r\nconst getAllForAMonthRequest = createAction(\"orders/getAllForAMonthRequest\");\r\nconst getAllForAMonthSuccess = createAction(\"orders/getAllForAMonthSuccess\");\r\nconst getAllForAMonthError = createAction(\"orders/getAllForAMonthError\");\r\n\r\nconst deleteOrderRequest = createAction(\"orders/deleteOrderRequest\");\r\nconst deleteOrderSuccess = createAction(\"orders/deleteOrderSuccess\");\r\nconst deleteOrderError = createAction(\"orders/deleteOrderError\");\r\n\r\nexport {\r\n  addOrderRequested,\r\n  addOrderSuccess,\r\n  addOrderFailure,\r\n  getAllForADayRequest,\r\n  getAllForADaySuccess,\r\n  getAllForADayError,\r\n  getAllForAMonthError,\r\n  getAllForAMonthSuccess,\r\n  getAllForAMonthRequest,\r\n  deleteOrderRequest,\r\n  deleteOrderSuccess,\r\n  deleteOrderError\r\n};\r\n","const getIsAuth = (state) => state.auth.token;\r\n\r\nexport { getIsAuth };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"AppLoader_loader__1vZLz\"};","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport styles from \"./AppLoader.module.css\";\r\n\r\nconst AppLoader = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader\r\n        style={styles}\r\n        type=\"MutatingDots\"\r\n        color=\"blue\"\r\n        secondaryColor=\"green\"\r\n        height={150}\r\n        width={150}\r\n        radius={10}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst setSelectedDate = createAction(\"date/setSelectedDate\");\r\n\r\nexport default setSelectedDate;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsAuth } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  redirectTo,\r\n  restricted,\r\n  ...routeProps\r\n}) => {\r\n  const isAuth = useSelector(getIsAuth);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuth && restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuth(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsAuth } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, ...routeProps }) => {\r\n  const isAuth = useSelector(getIsAuth);\r\n\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport PublicRoute from \"./routes/publicRoute\";\nimport PrivateRoute from \"./routes/privateRoute\";\nimport AppLoader from \"./components/appLoader/AppLoader\";\n\nconst AuthPage = lazy(() =>\n  import(\"./pages/authPage/AuthPage\" /* webpackChunkName: \"AuthPage\" */)\n);\nconst MainPage = lazy(() =>\n  import(\"./pages/mainPage/MainPage\" /* webpackChunkName: \"MainPage\" */)\n);\nconst ClientPage = lazy(() =>\n  import(\"./pages/clientPage/ClientPage\" /* webpackChunkName: \"ClientPage\" */)\n);\n\nconst NotFoundPage = lazy(() =>\n  import(\"./pages/notFound/NotFoundPage\" /* webpackChunkName: \"NotFoundPage\" */)\n);\n\nfunction App() {\n  return (\n    <>\n      <Suspense fallback={<AppLoader />}>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/\"\n            redirectTo=\"/main\"\n            restricted\n            component={AuthPage}\n          />\n\n          <PublicRoute\n            exact\n            path=\"/client/:id\"\n            redirectTo=\"/\"\n            component={ClientPage}\n          />\n          <PrivateRoute  path=\"/main\" redirectTo=\"/\" component={MainPage}  />\n\n\n          <Route component={NotFoundPage}></Route>\n        </Switch>\n      </Suspense>\n      <ToastContainer\n        transition={Zoom}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  // [registerSuccess]: (_, { payload }) => payload.email,\r\n  [loginSuccess]: (_, { payload }) => {\r\n    return { email: payload.email, name: payload.name };\r\n  },\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => {\r\n    return { email: payload.email, name: payload.name };\r\n  },\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  // [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n\r\nexport { authReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addOrderRequested,\r\n  addOrderSuccess,\r\n  addOrderFailure,\r\n  getAllForADayRequest,\r\n  getAllForADaySuccess,\r\n  getAllForADayError,\r\n  getAllForAMonthError,\r\n  getAllForAMonthSuccess,\r\n  getAllForAMonthRequest,\r\n  deleteOrderRequest,\r\n  deleteOrderSuccess,\r\n  deleteOrderError,\r\n} from \"./orders-actions\";\r\n\r\nconst ordersOfCurrentDay = createReducer([], {\r\n  [addOrderSuccess]: (state, { payload }) => {\r\n    if (!state) {\r\n      return [payload.data];\r\n    }\r\n    return [...state, payload.data];\r\n  },\r\n  [getAllForADaySuccess]: (state, { payload }) => payload.data,\r\n  [deleteOrderSuccess]: (state, { payload }) =>\r\n    state.filter(({ _id }) => _id !== payload.data._id),\r\n});\r\nconst ordersOfMonth = createReducer([], {\r\n  [addOrderSuccess]: (state, { payload }) => {\r\n    if (!state) {\r\n      return [payload.data];\r\n    }\r\n    return [...state, payload.data];\r\n  },\r\n\r\n  [getAllForAMonthSuccess]: (state, { payload }) => payload.data,\r\n  [deleteOrderSuccess]: (state, { payload }) =>\r\n    state.filter(({ _id }) => _id !== payload.data._id),\r\n});\r\nconst allorders = createReducer([], {});\r\n\r\nconst ordersReducer = combineReducers({\r\n  ordersOfCurrentDay,\r\n  ordersOfMonth,\r\n  allorders,\r\n});\r\n\r\nexport { ordersReducer };\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport getSelectedDate from \"./date.actions\";\r\nimport moment from \"moment\";\r\n\r\nconst currDate = moment().format(\"DD.MM.YYYY\");\r\n\r\nconst selectedDateReducer = createReducer(currDate, {\r\n  [getSelectedDate]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default selectedDateReducer;\r\n","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { authReducer } from \"./auth/auth-reducers\";\r\nimport { ordersReducer } from \"./orders/orders-reducers\";\r\nimport selectedDateReducer from \"./date/dateReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  order: ordersReducer,\r\n  selectedDate: selectedDateReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}